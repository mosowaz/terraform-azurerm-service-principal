stages:
- stage: Deploy_${{parameters.infrastructure}}
  displayName: 'tf Apply'
  dependsOn: Build_${{parameters.infrastructure}}
  condition: succeeded()
  pool:
    name: $(Pipeline_Agent)

  jobs:
  - deployment: apply
    workspace:
      clean: all
    environment: $(ADO_Environment)        
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
            # Download pipeline artifact from other branch from specific build
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              project: '$(System.TeamProject)'
              definition: '$(System.DefinitionId)'
              buildVersionToDownload: 'latestFromBranch'
              branchName: 'refs/heads/$(Build.SourceBranchName)'
              # pipelineId: '$(Build.BuildId)'
              artifactName: '${{parameters.tfplan}}-artifact'
              targetPath: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Download artifact from latest build'

          - template: installs.yml
          
          - bash: |
              set -exo pipefail
              chmod -R a+x .terraform/*
              terraform init -upgrade -input=false '-lock-timeout=2s' \
                -backend-config="resource_group_name=$(RGName)" \
                -backend-config="storage_account_name=$(StorageAccName)" \
                -backend-config="container_name=$(ContainerName)" \
                -backend-config="key=${{parameters.BlobName}}" \
                -backend-config="use_azuread_auth=true"
              terraform apply -auto-approve -input=false '-lock-timeout=10s' '${{parameters.tfplan}}' 
              terraform state list -state='${{parameters.BlobName}}'
            env:
              ARM_CLIENT_ID: $(SPN2-client-id)
              ARM_TENANT_ID: $(SPN2-tenant-id)
              ARM_CLIENT_SECRET: $(SPN2-client-secret)
              ARM_SUBSCRIPTION_ID: $(SPN2-subscription-id)
              TF_VAR_my_publicIP: $(my_publicIP)
            displayName: 'terraform apply'
            workingDirectory: '$(Build.ArtifactStagingDirectory)'
            continueOnError: false